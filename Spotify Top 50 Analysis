// For this project, I downloaded Spotify data from Kaggle.
// Then I created a table to insert Spotify data into.
// Lastly, I performed analytics on the data using SQL. 



CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

 // Then I inserted the Spotify Data .csv into the table. Then I explored the data with the below SQL.

SELECT * FROM BIT_DB.Spotifydata LIMIT 10;

// I found the average duration, loudness, and danceability for songs in the database. 

SELECT AVG(duration_ms),
AVG(danceability),
AVG(speechiness)
FROM BIT_DB.Spotifydata; 

// I determined the loudest song in the database

SELECT artist_name, track_name, loudness
FROM BIT_DB.Spotifydata
ORDER BY loudness DESC LIMIT 1;

// I determined the softest song in the database.

SELECT artist_name, track_name, loudness
FROM BIT_DB.Spotifydata
ORDER BY loudness ASC LIMIT 1;

// I determined how many time each artists appears in the database.

SELECT artist_name, COUNT(artist_name)
FROM BIT_DB.Spotifydata 
GROUP BY artist_name
ORDER BY artist_name ASC;

// I determined the Top 10 most popular songs.

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 10;

// I found the longest song in the database.

SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC LIMIT 1;
